#############################
#############################
#############################
#non-www to www for bags
server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name bags.com;
    #set ssl rules
    include /usr/local/ofbiz/etc/nginx/bigname_ssl.rules;
    include /usr/local/ofbiz/etc/nginx/ssl.rules;

    return 301 https://www.bags.com$request_uri;
}

#route http to https for www.bags.com
#server {
#    listen 80;
#    listen [::]:80;
#
#    server_name    www.bags.com;
#    return         301 https://www.bags.com$request_uri;
#}

#############################
#############################
#############################
#www.bags.com
server {
    error_log                  /var/log/nginx/error.log;
    access_log                 /var/log/nginx/access.log main;
    client_max_body_size       400M;

    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name                www.bags.com;
    
    #set ssl rules
    include /usr/local/ofbiz/etc/nginx/bags_ssl.rules;
    include /usr/local/ofbiz/etc/nginx/ssl.rules;

    #set gzip to reduce transfer sizes
    include /usr/local/ofbiz/etc/nginx/gzip.rules;

    if ($scheme = http) {
        set $ofbiz $scheme://serverfarm;
    }
    if ($scheme = https) {
        set $ofbiz $scheme://serverfarmSecure;
    }
    if ($bagsnewRedirect) {
        rewrite ^ $bagsnewRedirect permanent;
    }
    if ($bagsnew) {
        set $ofbiz $ofbiz$bagsnew$is_args$args;
    }

    #set caching for static files
    include /usr/local/ofbiz/etc/nginx/static.rules;

    #main rules
    location / {
        add_header Cache-Control "no-cache";

        proxy_pass $ofbiz;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Cache $cache;
        proxy_redirect off;
        proxy_intercept_errors on;
        proxy_http_version 1.1;

        #health_check interval=2m fails=2 passes=2 uri=/envelopes/control/healthCheck match=server_ok;
    }

    location ~* /envelopes/control/ {
        return 404;
    }

    location ~* /folders/control/ {
        return 404;
    }

    location ~* /bigname/control/ {
        return 404;
    }
}