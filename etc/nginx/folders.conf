#############################
#############################
#############################
#non-www to www for folders
server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name folders.com;
    #set ssl rules
    include /usr/local/ofbiz/etc/nginx/folders_ssl.rules;
    include /usr/local/ofbiz/etc/nginx/ssl.rules;

    return 301 https://www.folders.com$request_uri;
}

#route http to https for www.folders.com
server {
    listen 80;
    listen [::]:80;

    server_name    www.folders.com;
    return         301 https://www.folders.com$request_uri;
}

#############################
#############################
#############################
#www.folders.com
server {
    error_log                  /var/log/nginx/error.log;
    access_log                 /var/log/nginx/access.log main;
    client_max_body_size       400M;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name                www.folders.com;
    
    #set ssl rules
    include /usr/local/ofbiz/etc/nginx/folders_ssl.rules;
    include /usr/local/ofbiz/etc/nginx/ssl.rules;

    #set gzip to reduce transfer sizes
    include /usr/local/ofbiz/etc/nginx/gzip.rules;

    if ($scheme = http) {
        set $ofbiz $scheme://serverfarm;
    }
    if ($scheme = https) {
        set $ofbiz $scheme://serverfarmSecure;
    }
    if ($foldersnewRedirect) {
        rewrite ^ $foldersnewRedirect permanent;
    }
    if ($foldersnew) {
        set $ofbiz $ofbiz$foldersnew$is_args$args;
    }

    #404
    error_page                 404 /404.html;
    location = /404.html {
        alias /usr/local/ofbiz/hot-deploy/html/webapp/html/404/folders-404.html;
    }

    location = /robots.txt {
        alias /usr/local/ofbiz/hot-deploy/html/webapp/html/robots_folders.txt;
    }

    location = /sitemap.xml {
        alias /usr/local/ofbiz/hot-deploy/html/webapp/html/sitemap_folders.xml;
    }

    #old image links to new image links
    location ~* ^/images/products/.*/(.*).jpg$ {
        set $prodImg $1;
        rewrite_by_lua 'return ngx.redirect("http://actionenvelope.scene7.com/is/image/ActionEnvelope/" .. ngx.var.prodImg .. "?hei=700&fmt=jpeg&ts=10239123", ngx.HTTP_MOVED_PERMANENTLY)';
    }

    #scene7 design images for google
    location ~* ^/images/designs/.*/(.*).jpg$ {
        set $designImg $1;
        rewrite_by_lua 'return ngx.redirect("http://actionenvelopew2p.scene7.com/is/agm/ActionEnvelope/" .. ngx.var.designImg .. "?hei=700&fmt=jpeg&ts=10239123", ngx.HTTP_MOVED_PERMANENTLY)';
    }

    #set caching for static files
    include /usr/local/ofbiz/etc/nginx/static.rules;

    #cache rules
    include /usr/local/ofbiz/etc/nginx/cache_folders.rules;

    #main rules
    location / {
        add_header Cache-Control "no-cache";

        proxy_pass $ofbiz;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Cache $cache;
        proxy_redirect off;
        proxy_intercept_errors on;
        proxy_http_version 1.1;

        #health_check interval=2m fails=2 passes=2 uri=/envelopes/control/healthCheck match=server_ok;
    }

    location ~* /envelopes/control/ {
        return 404;
    }

    location ~* /bigname/control/ {
        return 404;
    }

    location ~* /bags/control/ {
        return 404;
    }
}